import {React,useRef,useState,useEffect} from "react";
import SMHBVentilationGraph from "./SMHBVentilationGraph";
import './EPC.css';
import TPSGraphComp from "./TPSGraphComp";
import './TenantProfileSectionStyle.css';
import RiskAssessmentCard from "./RiskAssessmentCard";
import api from "../api";

import HPEPCRTableComp from "./HPEPCRTableComp";
import RadialGaugeComp from "./RadialGaugeComp";
export default function HeatingSystem(){

    function convertDateFormat(dateString) { 
        const [year, month, day] = dateString.split('-');
        return `${day}/${month}/${year}`;
    }
    const [data,setData]=useState({
        // Img:"imgEPC.jpg",
        // due:'30/08/2024',
        // expire:'4',
        // score:'0',
    })

    // const[hdata,sethdata]=useState([
    //     {
    //         "id": "da1dbae5-c734-46d8-b2d1-141d22d53ff0",
    //         "score": 69.0,
    //         "description": "This sample text",
    //         "heatcost": 0.0,
    //         "hotcost": 0.0,
    //         "heating_units": [
    //             {
    //                 "id": 1,
    //                 "name": "Boiler unit",
    //                 "condition": 0.0,
    //                 "refer": "da1dbae5-c734-46d8-b2d1-141d22d53ff0"
    //             },
    //             {
    //                 "id": 2,
    //                 "name": "Controller",
    //                 "condition": 0.0,
    //                 "refer": "da1dbae5-c734-46d8-b2d1-141d22d53ff0"
    //             },
    //             {
    //                 "id": 3,
    //                 "name": "Radiator",
    //                 "condition": 0.0,
    //                 "refer": "da1dbae5-c734-46d8-b2d1-141d22d53ff0"
    //             },
    //             {
    //                 "id": 4,
    //                 "name": "Fleu and ventilator",
    //                 "condition": 0.0,
    //                 "refer": "da1dbae5-c734-46d8-b2d1-141d22d53ff0"
    //             }
    //         ]
    //     }
    // ]);

    const [heatingData, setHeatingData] = useState(null);
    
    

    useEffect(()=>{
       const fetchData=async()=>{
        try{
            const res = await api.get('landlord/dashboard/');
            const pid = res.data.properties[0].property[0].id;
            const response=await api.get(`landlords/gascur/${pid}/`);
            const response1=await api.get("landlord/heating-safety/");
            setHeatingData(response1.data[0]);
            // console.log(response1.data[0]);
          setData({
            Img:response.data.view_document,
            due:convertDateFormat(response.data.report_date),
            expire:response.data.expiry_months,
            score:Math.round(response.data.repair_score),
          }) 

        //   sethdata(response1.data);
        }catch(err){
            console.log("Error while Fetching the Data",err);
        }
       } 
       fetchData();
    },[]);

    const btnRef = useRef([]);
    const subBtnRef = useRef([]);
    const [getActive,setActive] = useState('Gas Safety Certificate');
    const [subgetActive,subsetActive] = useState('Current Report');
    const setele = ()=>{
        subsetActive('');
    }
    useEffect(
        ()=>{
            btnRef.current.forEach(element => {
                element.classList.remove('ActiveEleBtn');
            });
            btnRef.current[0].classList.add('ActiveEleBtn');
        },[]
    );
    useEffect(
        ()=>{
            if(getActive === 'Gas Safety Certificate'){
                if(subgetActive === 'Current Report'){
                    subBtnRef.current[0].classList.add('activeBtn');
                }
            }
        },[getActive]
    )
    const OnClickEvent = (event)=>{
        btnRef.current.forEach(element => {
            element.classList.remove('ActiveEleBtn');
        });
        event.target.classList.add('ActiveEleBtn');
        setActive(event.target.innerText);
        if(event.target.innerText == 'Heating System'){
            subsetActive('')
        }
        else{
            subsetActive('Current Report');
        }
    }
    const OnClickEventsub = (event)=>{
        subBtnRef.current.forEach(element => {
            element.classList.remove('activeBtn');
        });
        event.target.classList.add('activeBtn');
        subsetActive(event.target.innerText);
    }
    const subOptionalRender = ()=>{
        switch (subgetActive) {
            case 'Current Report':
                return(
                    <>
                        <img src={data.Img} className="HSImageUpload" alt="img"/>
                    </>
                );
                case 'Previous Report':
                    return(
                        <>
                            <div className="TableContainer p-3">
                                <HPEPCRTableComp/>
                            </div>
                            
                        </>
                    );
            default:
                return(
                    <h1>Error</h1>
                );
            }
    }
    const OptionalRender = ()=>{
        switch (getActive) {
            case 'Gas Safety Certificate':
                return(
                    <>
                        <div className="HeatingSystemMainContainer d-flex flex-column gap-3 p-3">
                            <div className="TopSection d-flex flex-row justify-content-between">
                                <div className="btnGroupItms d-flex flex-row gap-3">
                                <button ref = {(ele)=>{subBtnRef.current[0]=ele}} className="btnitm" onClick={(e)=>{OnClickEventsub(e)}}>
                                    Current Report
                                </button>
                                <button ref = {(ele)=>{subBtnRef.current[1]=ele}} className="btnitm" onClick={(e)=>{OnClickEventsub(e)}}>
                                    Previous Report
                                </button>
                                </div>
                                <div className="IndicatorLoaderContainer d-flex flex-column">
                                    <div className="textContainer d-flex flex-row justify-content-between">
                                        <p className="text">Due Date : <span>{data.due}</span></p>
                                        <p className="text">Expired in : <span>{data.expire}</span></p>
                                    </div>
                                    <div className="Indicator">
                                        <div className="Indicator-before" style={{width: `${20}%`}}></div>
                                    </div>
                                </div>
                            </div>
                            {
                                subOptionalRender()
                            }
                        </div>
                    </>
                );
            case 'Heating System':
                return(
                    <>
                        <div className="HeatingSystemMainContainer d-flex flex-column align-items-center gap-3 p-3">
                            <img className="Imageele mb-3" src={"/GIF.jpg"} alt="img"/>
                            <div className="CardContainer d-flex flex-row gap-3 flex-wrap">

                                {heatingData.heating_units.map((item,i)=>{
                                    return(
                                        <div className="Carditm" key={i}>
                                    <RiskAssessmentCard score={item.score} title={item.name}>
                                    <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M12.7333 27.6951C11.3927 27.5307 10.0527 27.2652 8.71377 26.8988C7.50363 26.5675 6.66667 25.4865 6.66667 24.2547V4.08475C6.66667 2.85295 7.50363 1.77196 8.71377 1.44074C11.1398 0.776835 13.5693 0.444336 16 0.444336C18.4308 0.444336 20.8602 0.776835 23.2862 1.4408C24.4964 1.77202 25.3333 2.85301 25.3333 4.08482V24.2548C25.3333 25.4866 24.4964 26.5676 23.2862 26.8988C21.9473 27.2653 20.6073 27.5308 19.2667 27.6951V30.6404C19.2667 31.1458 18.8488 31.5554 18.3333 31.5554C17.8178 31.5554 17.4 31.1458 17.4 30.6404V27.8585C16.4673 27.9075 15.5327 27.9075 14.6 27.8585V30.6404C14.6 31.1458 14.1822 31.5554 13.6667 31.5554C13.1512 31.5554 12.7333 31.1458 12.7333 30.6404V27.6951Z" fill="#EF4444"/>
                                        <path d="M16.9428 11.6093L17.6094 10.9426C18.1301 10.4219 18.1301 9.57767 17.6094 9.05704C17.0887 8.53633 16.2445 8.53633 15.7238 9.05704L15.0572 9.72367C14.5365 10.2444 14.5365 11.0886 15.0572 11.6093C15.5779 12.13 16.4221 12.13 16.9428 11.6093Z" fill="white"/>
                                        <path d="M16 17.3333C19.6819 17.3333 22.6667 14.3486 22.6667 10.6667C22.6667 6.98474 19.6819 4 16 4C12.3181 4 9.33334 6.98474 9.33334 10.6667C9.33334 14.3486 12.3181 17.3333 16 17.3333ZM16 14.6667C13.7909 14.6667 12 12.8759 12 10.6668C12 8.45764 13.7909 6.6667 16 6.6667C18.2091 6.6667 20 8.45755 20 10.6667C20 12.8758 18.2091 14.6667 16 14.6667Z" fill="#FBBF24"/>
                                    </svg>
                                    </RiskAssessmentCard>
                                </div>
                                    )
                                })}
                                
                                {/* <div className="Carditm">
                                    <RiskAssessmentCard score={10} title={'The Boiler Uint'}>
                                    <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M12.7333 27.6951C11.3927 27.5307 10.0527 27.2652 8.71377 26.8988C7.50363 26.5675 6.66667 25.4865 6.66667 24.2547V4.08475C6.66667 2.85295 7.50363 1.77196 8.71377 1.44074C11.1398 0.776835 13.5693 0.444336 16 0.444336C18.4308 0.444336 20.8602 0.776835 23.2862 1.4408C24.4964 1.77202 25.3333 2.85301 25.3333 4.08482V24.2548C25.3333 25.4866 24.4964 26.5676 23.2862 26.8988C21.9473 27.2653 20.6073 27.5308 19.2667 27.6951V30.6404C19.2667 31.1458 18.8488 31.5554 18.3333 31.5554C17.8178 31.5554 17.4 31.1458 17.4 30.6404V27.8585C16.4673 27.9075 15.5327 27.9075 14.6 27.8585V30.6404C14.6 31.1458 14.1822 31.5554 13.6667 31.5554C13.1512 31.5554 12.7333 31.1458 12.7333 30.6404V27.6951Z" fill="#EF4444"/>
                                        <path d="M16.9428 11.6093L17.6094 10.9426C18.1301 10.4219 18.1301 9.57767 17.6094 9.05704C17.0887 8.53633 16.2445 8.53633 15.7238 9.05704L15.0572 9.72367C14.5365 10.2444 14.5365 11.0886 15.0572 11.6093C15.5779 12.13 16.4221 12.13 16.9428 11.6093Z" fill="white"/>
                                        <path d="M16 17.3333C19.6819 17.3333 22.6667 14.3486 22.6667 10.6667C22.6667 6.98474 19.6819 4 16 4C12.3181 4 9.33334 6.98474 9.33334 10.6667C9.33334 14.3486 12.3181 17.3333 16 17.3333ZM16 14.6667C13.7909 14.6667 12 12.8759 12 10.6668C12 8.45764 13.7909 6.6667 16 6.6667C18.2091 6.6667 20 8.45755 20 10.6667C20 12.8758 18.2091 14.6667 16 14.6667Z" fill="#FBBF24"/>
                                    </svg>
                                    </RiskAssessmentCard>
                                </div>
                                <div className="Carditm">
                                    <RiskAssessmentCard score={30} title={'Controller'}>
                                    <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                        <path d="M7.18267 4.91428C5.92075 4.91428 4.90479 5.92975 4.90479 7.19132V24.7835C4.90479 26.0451 5.92053 27.0608 7.18245 27.0608H24.7788C26.0407 27.0608 27.0567 26.0451 27.0567 24.7837V7.19132C27.0567 5.92975 26.0407 4.91406 24.779 4.91406L7.18267 4.91428ZM8.80343 7.69085H23.1228C23.2695 7.6905 23.4149 7.71913 23.5505 7.77509C23.6861 7.83106 23.8093 7.91325 23.9131 8.01696C24.0168 8.12067 24.0991 8.24385 24.1551 8.37942C24.2111 8.515 24.2398 8.6603 24.2394 8.80698V23.141C24.2398 23.2877 24.2111 23.433 24.1551 23.5686C24.0991 23.7042 24.0169 23.8274 23.9131 23.9311C23.8093 24.0348 23.6861 24.117 23.5505 24.173C23.4149 24.229 23.2695 24.2577 23.1228 24.2574H8.80343C8.6567 24.2577 8.51135 24.229 8.37573 24.173C8.2401 24.117 8.11688 24.0348 8.01312 23.9311C7.90937 23.8274 7.82713 23.7042 7.77112 23.5686C7.71512 23.433 7.68646 23.2877 7.68678 23.141V8.80698C7.68646 8.6603 7.71512 8.515 7.77113 8.37942C7.82713 8.24385 7.90938 8.12067 8.01313 8.01696C8.11689 7.91325 8.24012 7.83106 8.37574 7.77509C8.51137 7.71913 8.65671 7.6905 8.80343 7.69085Z" fill="#FBBF24"/>
                                        <path d="M9.53529 10.5481C9.53529 9.9958 9.983 9.54808 10.5353 9.54808H21.3907C21.943 9.54808 22.3907 9.9958 22.3907 10.5481V21.3995C22.3907 21.9518 21.943 22.3995 21.3907 22.3995H10.5353C9.983 22.3995 9.53529 21.9518 9.53529 21.3995V10.5481ZM27.7846 23.2841C27.7846 22.7394 28.2262 22.2977 28.771 22.2977H29.6806C30.2254 22.2977 30.667 22.7394 30.667 23.2841C30.667 23.8289 30.2254 24.2706 29.6806 24.2706H28.771C28.2262 24.2706 27.7846 23.8289 27.7846 23.2841ZM27.7846 19.6434C27.7846 19.0986 28.2263 18.6569 28.7711 18.6569H29.6805C30.2253 18.6569 30.667 19.0986 30.667 19.6434C30.667 20.1883 30.2253 20.63 29.6805 20.63H28.7711C28.2263 20.63 27.7846 20.1883 27.7846 19.6434ZM27.7846 15.9966C27.7846 15.4518 28.2263 15.0101 28.7711 15.0101H29.6805C30.2253 15.0101 30.667 15.4518 30.667 15.9966C30.667 16.5415 30.2253 16.9832 29.6805 16.9832H28.7711C28.2263 16.9832 27.7846 16.5415 27.7846 15.9966ZM27.7846 12.3455C27.7846 11.8007 28.2262 11.3591 28.771 11.3591H29.6806C30.2254 11.3591 30.667 11.8007 30.667 12.3455C30.667 12.8903 30.2254 13.3319 29.6806 13.3319H28.771C28.2262 13.3319 27.7846 12.8903 27.7846 12.3455ZM27.7846 8.69447C27.7846 8.14969 28.2262 7.70805 28.771 7.70805H29.6806C30.2254 7.70805 30.667 8.14969 30.667 8.69447C30.667 9.23926 30.2254 9.68089 29.6806 9.68089H28.771C28.2262 9.68089 27.7846 9.23926 27.7846 8.69447ZM1.32549 23.2841C1.32549 22.7394 1.76712 22.2977 2.31191 22.2977H3.22152C3.76631 22.2977 4.20794 22.7394 4.20794 23.2841C4.20794 23.8289 3.76631 24.2706 3.22152 24.2706H2.31191C1.76712 24.2706 1.32549 23.8289 1.32549 23.2841ZM1.32549 19.6434C1.32549 19.0986 1.76717 18.6569 2.31202 18.6569H3.22141C3.76626 18.6569 4.20794 19.0986 4.20794 19.6434C4.20794 20.1883 3.76626 20.63 3.22141 20.63H2.31202C1.76717 20.63 1.32549 20.1883 1.32549 19.6434ZM1.32549 15.9966C1.32549 15.4518 1.76717 15.0101 2.31202 15.0101H3.22141C3.76626 15.0101 4.20794 15.4518 4.20794 15.9966C4.20794 16.5415 3.76626 16.9832 3.22141 16.9832H2.31202C1.76717 16.9832 1.32549 16.5415 1.32549 15.9966ZM1.32549 12.3455C1.32549 11.8007 1.76712 11.3591 2.31191 11.3591H3.22152C3.76631 11.3591 4.20794 11.8007 4.20794 12.3455C4.20794 12.8903 3.76631 13.3319 3.22152 13.3319H2.31191C1.76712 13.3319 1.32549 12.8903 1.32549 12.3455ZM1.32549 8.69447C1.32549 8.14969 1.76712 7.70805 2.31191 7.70805H3.22152C3.76631 7.70805 4.20794 8.14969 4.20794 8.69447C4.20794 9.23926 3.76631 9.68089 3.22152 9.68089H2.31191C1.76712 9.68089 1.32549 9.23926 1.32549 8.69447ZM8.68898 27.785C9.23392 27.785 9.67567 28.2268 9.67567 28.7717V29.68C9.67567 30.2249 9.23392 30.6667 8.68898 30.6667C8.14404 30.6667 7.70229 30.2249 7.70229 29.68V28.7717C7.70229 28.2268 8.14404 27.785 8.68898 27.785ZM12.3308 27.785C12.8759 27.785 13.3177 28.2269 13.3177 28.7719V29.6798C13.3177 30.2248 12.8759 30.6667 12.3308 30.6667C11.7857 30.6667 11.3439 30.2248 11.3439 29.6798V28.7719C11.3439 28.2269 11.7857 27.785 12.3308 27.785ZM15.9784 27.785C16.5233 27.785 16.9651 28.2268 16.9651 28.7717V29.68C16.9651 30.2249 16.5233 30.6667 15.9784 30.6667C15.4335 30.6667 14.9917 30.2249 14.9917 29.68V28.7717C14.9917 28.2268 15.4335 27.785 15.9784 27.785ZM19.635 27.785C20.18 27.785 20.6218 28.2268 20.6218 28.7718V29.6799C20.6218 30.2249 20.18 30.6667 19.635 30.6667C19.09 30.6667 18.6482 30.2249 18.6482 29.6799V28.7718C18.6482 28.2268 19.09 27.785 19.635 27.785ZM23.2829 27.785C23.8278 27.785 24.2696 28.2268 24.2696 28.7717V29.68C24.2696 30.2249 23.8278 30.6667 23.2829 30.6667C22.738 30.6667 22.2962 30.2249 22.2962 29.68V28.7717C22.2962 28.2268 22.738 27.785 23.2829 27.785ZM8.68898 1.33301C9.23392 1.33301 9.67567 1.77477 9.67567 2.3197V3.2282C9.67567 3.77313 9.23392 4.21489 8.68898 4.21489C8.14404 4.21489 7.70229 3.77313 7.70229 3.2282V2.3197C7.70229 1.77477 8.14404 1.33301 8.68898 1.33301ZM12.3308 1.33301C12.8759 1.33301 13.3177 1.77486 13.3177 2.31992V3.22798C13.3177 3.77303 12.8759 4.21489 12.3308 4.21489C11.7857 4.21489 11.3439 3.77303 11.3439 3.22798V2.31992C11.3439 1.77487 11.7857 1.33301 12.3308 1.33301ZM15.9784 1.33301C16.5233 1.33301 16.9651 1.77477 16.9651 2.3197V3.2282C16.9651 3.77313 16.5233 4.21489 15.9784 4.21489C15.4335 4.21489 14.9917 3.77313 14.9917 3.2282V2.3197C14.9917 1.77477 15.4335 1.33301 15.9784 1.33301ZM19.635 1.33301C20.18 1.33301 20.6218 1.77481 20.6218 2.31981V3.22809C20.6218 3.77308 20.18 4.21489 19.635 4.21489C19.09 4.21489 18.6482 3.77308 18.6482 3.22809V2.31981C18.6482 1.77482 19.09 1.33301 19.635 1.33301ZM23.2829 1.33301C23.8278 1.33301 24.2696 1.77477 24.2696 2.3197V3.2282C24.2696 3.77313 23.8278 4.21489 23.2829 4.21489C22.738 4.21489 22.2962 3.77313 22.2962 3.2282V2.3197C22.2962 1.77477 22.738 1.33301 23.2829 1.33301Z" fill="#EF4444"/>
                                    </svg>
                                    </RiskAssessmentCard>
                                </div>
                                <div className="Carditm">
                                    <RiskAssessmentCard score={30} title={'Radiators'}>
                                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <g clip-path="url(#clip0_1604_4797)">
                                            <path d="M12.605 9.16943C11.6514 9.16943 10.8758 9.94506 10.8758 10.8987V30.2708C10.8758 31.2245 11.6514 32.0001 12.605 32.0001C13.5584 32.0001 14.3343 31.2245 14.3343 30.2708V10.8987C14.3343 9.94506 13.5587 9.16943 12.605 9.16943ZM17.9386 9.16943C16.9849 9.16943 16.2093 9.94506 16.2093 10.8987V30.2708C16.2093 31.2245 16.9852 32.0001 17.9386 32.0001C18.8921 32.0001 19.6678 31.2245 19.6678 30.2708V10.8987C19.6678 9.94506 18.8922 9.16943 17.9386 9.16943ZM23.2721 9.16943C22.3187 9.16943 21.5428 9.94506 21.5428 10.8987V30.2708C21.5428 31.2245 22.3187 32.0001 23.2721 32.0001C24.2257 32.0001 25.0015 31.2245 25.0015 30.2708V10.8987C25.0015 9.94506 24.2257 9.16943 23.2721 9.16943ZM5.54202 18.7337V30.2708C5.54202 31.2245 6.3179 32.0001 7.27153 32.0001C8.22491 32.0001 9.00078 31.2245 9.00078 30.2708V10.8987C9.00078 9.94506 8.22491 9.16943 7.27153 9.16943C6.3179 9.16943 5.54202 9.94506 5.54202 10.8987V13.1058H1.93894V14.9822H0.0625V16.8572H1.93894V18.7337H5.54202ZM30.3351 13.1058V10.8987C30.3351 9.94506 29.5592 9.16943 28.6058 9.16943C27.6522 9.16943 26.8765 9.94506 26.8765 10.8987V30.2708C26.8765 31.2245 27.6522 32.0001 28.6058 32.0001C29.5592 32.0001 30.3351 31.2245 30.3351 30.2708V14.9808H32.0616V13.1058H30.3351Z" fill="#EF4444"/>
                                            <path d="M12.3199 7.29278H14.1946C14.1946 6.90628 14.2674 6.76078 14.3995 6.49634C14.5694 6.15652 14.8021 5.69096 14.8021 4.86208C14.8021 4.0332 14.5694 3.56739 14.3995 3.22758C14.2674 2.9632 14.1946 2.81764 14.1946 2.43095C14.1946 2.04445 14.2674 1.89894 14.3995 1.63451C14.5694 1.29469 14.8021 0.828878 14.8021 0H12.927C12.927 0.386752 12.8543 0.532252 12.7222 0.796628C12.5522 1.1365 12.3199 1.60207 12.3199 2.43095C12.3199 3.26001 12.5525 3.72558 12.7222 4.06545C12.8543 4.32983 12.927 4.47533 12.927 4.86208C12.927 5.24858 12.8543 5.39408 12.7222 5.65821C12.5525 5.99834 12.3199 6.46384 12.3199 7.29278ZM16.6973 7.29278H18.5723C18.5723 6.90628 18.6451 6.76078 18.7772 6.49634C18.9471 6.15652 19.1798 5.69096 19.1798 4.86208C19.1798 4.0332 18.9471 3.56739 18.7772 3.22758C18.6451 2.9632 18.5723 2.81764 18.5723 2.43095C18.5723 2.04445 18.6451 1.89894 18.7772 1.63451C18.9471 1.29469 19.1798 0.828878 19.1798 0H17.3047C17.3047 0.386752 17.232 0.532252 17.0999 0.796628C16.9299 1.1365 16.6973 1.60207 16.6973 2.43095C16.6973 3.26001 16.93 3.72558 17.0999 4.06545C17.232 4.32983 17.3047 4.47533 17.3047 4.86208C17.3047 5.24858 17.232 5.39408 17.0999 5.65821C16.9299 5.99834 16.6973 6.46384 16.6973 7.29278ZM21.0751 7.29278H22.9501C22.9501 6.90628 23.0228 6.76078 23.1549 6.49634C23.3248 6.15652 23.5575 5.69096 23.5575 4.86208C23.5575 4.0332 23.3248 3.56739 23.1549 3.22758C23.0228 2.9632 22.95 2.81764 22.95 2.43095C22.95 2.04445 23.0228 1.89894 23.1549 1.63451C23.3248 1.29469 23.5575 0.828878 23.5575 0H21.6825C21.6825 0.386752 21.6097 0.532252 21.4776 0.796628C21.3076 1.1365 21.075 1.60207 21.075 2.43095C21.075 3.26001 21.3077 3.72558 21.4776 4.06545C21.6097 4.32983 21.6825 4.47533 21.6825 4.86208C21.6825 5.24858 21.6097 5.39408 21.4776 5.65821C21.3076 5.99834 21.0751 6.46384 21.0751 7.29278Z" fill="#FBBF24"/>
                                            </g>
                                            <defs>
                                            <clipPath id="clip0_1604_4797">
                                            <rect width="32" height="32" fill="white"/>
                                            </clipPath>
                                            </defs>
                                        </svg>
                                    </RiskAssessmentCard>
                                </div>
                                <div className="Carditm">
                                    <RiskAssessmentCard score={30} title={'Flue and Ventilation'}>
                                        <svg width="32" height="32" viewBox="0 0 32 32" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M15.9991 19.7443C18.0684 19.7443 19.746 18.0668 19.746 15.9974C19.746 13.928 18.0684 12.2505 15.9991 12.2505C13.9297 12.2505 12.2521 13.928 12.2521 15.9974C12.2521 18.0668 13.9297 19.7443 15.9991 19.7443Z" fill="#EF4444"/>
                                            <path d="M30.2258 14.824C29.8207 13.7394 28.8914 12.8336 27.7513 12.4229C25.6034 11.642 23.0877 11.8534 20.4104 12.9723C21.0012 13.8315 21.3275 14.8449 21.3488 15.8874C21.3702 16.9299 21.0858 17.9558 20.5307 18.8385C21.4829 19.1757 22.3169 19.7816 22.9319 20.5829C23.5469 21.3843 23.9164 22.3467 23.9958 23.3537C23.9958 23.3537 24.0078 23.4803 24.0049 23.7547C24.0023 24.0832 24.0988 24.4049 24.2817 24.6777C24.5011 25.0146 24.8431 25.2529 25.2351 25.3419C25.6272 25.431 26.0385 25.364 26.382 25.155L26.4124 25.1366C29.2822 23.0535 31.6879 18.587 30.2258 14.824ZM10.6478 16.0002C10.6466 14.9963 10.9294 14.0125 11.4636 13.1625C10.5128 12.8246 9.68017 12.2187 9.0663 11.4178C8.45242 10.617 8.08356 9.65551 8.00429 8.64957C8.00429 8.64957 7.99226 8.52295 7.99512 8.24852C7.99772 7.92004 7.90129 7.5984 7.7184 7.32554C7.49897 6.98863 7.157 6.7504 6.76493 6.66131C6.37287 6.57223 5.96152 6.63929 5.61805 6.84829L5.58769 6.86663C2.71791 8.94806 0.312195 13.4146 1.7743 17.1793C2.17936 18.2638 3.10864 19.169 4.24876 19.5804C6.39666 20.3619 8.91295 20.1499 11.5908 19.0304C10.9754 18.1399 10.6464 17.0827 10.6478 16.0002ZM25.1514 5.61822L25.1336 5.58786C23.0516 2.71808 18.5856 0.312363 14.8209 1.77447C13.7364 2.17953 12.8312 3.10881 12.4204 4.24893C11.6389 6.39625 11.8509 8.9114 12.9687 11.5881C13.8279 10.9965 14.8417 10.6694 15.8847 10.6474C16.9277 10.6255 17.9543 10.9094 18.8377 11.4643C19.1756 10.5134 19.7816 9.68062 20.5826 9.06664C21.3835 8.45266 22.3451 8.08374 23.3512 8.00446C23.3512 8.00446 23.4778 7.99242 23.7523 7.99529C24.0807 7.99782 24.4024 7.90139 24.6753 7.71856C25.012 7.49896 25.25 7.1569 25.3388 6.76485C25.4277 6.3728 25.3605 5.96155 25.1514 5.61822ZM16 21.3485C14.9956 21.3496 14.0113 21.0664 13.1612 20.5315C12.8239 21.4835 12.2179 22.3174 11.4166 22.9323C10.6152 23.5472 9.65289 23.9166 8.64596 23.9959C8.64596 23.9959 8.51935 24.008 8.24492 24.0051C7.91662 24.0025 7.59516 24.099 7.32251 24.2818C6.9856 24.5013 6.74737 24.8432 6.65828 25.2353C6.56919 25.6274 6.63626 26.0387 6.84526 26.3822L6.86302 26.4125C8.94503 29.2823 13.411 31.688 17.1757 30.2259C18.2602 29.8209 19.1654 28.8916 19.5768 27.7515C20.3577 25.603 20.1457 23.0861 19.0262 20.4077C18.1364 21.0213 17.0809 21.3495 16 21.3485Z" fill="#FBBF24"/>
                                        </svg>

                                    </RiskAssessmentCard>
                                </div> */}

                            </div>
                        </div>
                    </>
                );
            default:
                return(
                    <h1>Error</h1>
                );
            }
    }
    
    return (
        <>
        <div className="EPCSection">
            <div className="container-fluid p-0">
                <div className="row m-0">
                    <div className="col-4">
                        <div className="SideSection d-flex flex-column gap-3">
                            <div className="BtnGroupEle d-flex flex-column gap-3">
                                <button ref = {(ele)=>{btnRef.current[0]=ele}} className="TabBtnele" onClick={(e)=>{OnClickEvent(e)}}>
                                    Gas Safety Certificate
                                </button>
                                <button ref = {(ele)=>{btnRef.current[1]=ele}} className="TabBtnele" onClick={(e)=>{OnClickEvent(e)}}>
                                    Heating System
                                </button>
                            </div>
                            <div className="ScoreCardEle d-flex flex-column align-items-center gap-5 p-3 pb-5" style={{height:'420px'}}>
                                <h1 className="heading">Heating Score</h1>
                                <RadialGaugeComp value={data.score} title={"Heating Score"}/>
                                {/* <SMHBVentilationGraph score={data.score} title={"Repair Score"}/> */}
                            </div>
                        </div>
                    </div>
                    <div className="col-8">
                        
                        {
                            OptionalRender()
                        }
                        
                        
                    </div>
                </div>
            </div>
        </div>
        </>
    )
}